{"version":3,"sources":["../../../server/tests/seed/seed.js"],"names":["ObjectID","require","Todo","User","jwt","userIds","users","_id","email","password","tokens","access","token","sign","process","env","JWT_SECRET","toString","populateUsers","done","remove","then","user0","save","user4","user5","Promise","all","catch","err","console","log","todos","text","_creator","completed","completedAt","populateTodos","insertMany","module","exports"],"mappings":";;AAAA,MAAM,EAACA,QAAD,KAAaC,QAAQ,SAAR,CAAnB;AACA,MAAM,EAACC,IAAD,KAASD,QAAQ,qBAAR,CAAf;AACA,MAAM,EAACE,IAAD,KAASF,QAAQ,qBAAR,CAAf;AACA,MAAMG,MAAMH,QAAQ,cAAR,CAAZ;;AAEA,MAAMI,UAAU,CAAC,IAAIL,QAAJ,EAAD,EAAiB,IAAIA,QAAJ,EAAjB,EAAiC,IAAIA,QAAJ,EAAjC,EAAiD,IAAIA,QAAJ,EAAjD,EAAiE,IAAIA,QAAJ,EAAjE,EAAiF,IAAIA,QAAJ,EAAjF,CAAhB;;AAEA,MAAMM,QAAQ,CACb,EAAEC,KAAKF,QAAQ,CAAR,CAAP,EAAmBG,OAAO,mBAA1B,EAA+CC,UAAU,QAAzD,EADa,EAEb,EAAEF,KAAKF,QAAQ,CAAR,CAAP,EAAmBG,OAAO,mBAA1B,EAA+CC,UAAU,QAAzD,EAFa,EAGb,EAAEF,KAAKF,QAAQ,CAAR,CAAP,EAAmBG,OAAO,OAA1B,EAAmCC,UAAU,QAA7C,EAHa,EAIb,EAAEF,KAAKF,QAAQ,CAAR,CAAP,EAAmBG,OAAO,mBAA1B,EAA+CC,UAAU,OAAzD,EAJa,EAKb;AACCF,MAAKF,QAAQ,CAAR,CADN;AAECG,QAAO,eAFR;AAGCC,WAAU,QAHX;AAICC,SAAQ,CAAC;AACRC,UAAQ,MADA;AAERC,SAAOR,IAAIS,IAAJ,CAAS,EAACN,KAAKF,QAAQ,CAAR,CAAN,EAAkBM,QAAQ,MAA1B,EAAT,EAA4CG,QAAQC,GAAR,CAAYC,UAAxD,EAAoEC,QAApE;AAFC,EAAD;AAJT,CALa,EAcb,EAAEV,KAAKF,QAAQ,CAAR,CAAP,EAAmBG,OAAO,iBAA1B,EAA6CC,UAAU,cAAvD,EAda,CAAd;;AAkBA,MAAMS,gBAAiBC,IAAD,IAAU;AAC/BhB,MAAKiB,MAAL,CAAY,EAAZ,EACCC,IADD,CACM,MAAM;AACX,QAAMC,QAAQ,IAAInB,IAAJ,CAASG,MAAM,CAAN,CAAT,EAAmBiB,IAAnB,EAAd;AACA,QAAMC,QAAQ,IAAIrB,IAAJ,CAASG,MAAM,CAAN,CAAT,EAAmBiB,IAAnB,EAAd;AACA,QAAME,QAAQ,IAAItB,IAAJ,CAASG,MAAM,CAAN,CAAT,EAAmBiB,IAAnB,EAAd;;AAEA,SAAOG,QAAQC,GAAR,CAAY,CAACL,KAAD,EAAQE,KAAR,EAAeC,KAAf,CAAZ,CAAP;AACA,EAPD,EAQCJ,IARD,CAQM,MAAMF,MARZ,EASCS,KATD,CASQC,GAAD,IAASC,QAAQC,GAAR,CAAYF,GAAZ,CAThB;AAUA,CAXD;;AAaA,MAAMG,QAAQ,CACb,EAAEzB,KAAK,IAAIP,QAAJ,EAAP,EAAuBiC,MAAM,iBAA7B,EAAgDC,UAAU7B,QAAQ,CAAR,CAA1D,EADa,EAEb,EAAEE,KAAK,IAAIP,QAAJ,EAAP,EAAuBiC,MAAM,kBAA7B,EAAiDE,WAAW,IAA5D,EAAkEC,aAAa,SAA/E,EAA0FF,UAAU7B,QAAQ,CAAR,CAApG,EAFa,CAAd;;AAKA,MAAMgC,gBAAiBlB,IAAD,IAAU;AAC/BjB,MAAKkB,MAAL,CAAY,EAAZ,EACCC,IADD,CACM,MAAM;AACX,SAAOnB,KAAKoC,UAAL,CAAgBN,KAAhB,CAAP;AACA,EAHD,EAICX,IAJD,CAIM,MAAMF,MAJZ,EAKCS,KALD,CAKQC,GAAD,IAASC,QAAQC,GAAR,CAAYF,GAAZ,CALhB;AAMA,CAPD;;AAWAU,OAAOC,OAAP,GAAiB;AAChBR,MADgB;AAEhBK,cAFgB;AAGhB/B,MAHgB;AAIhBY;AAJgB,CAAjB","file":"seed.js","sourcesContent":["const {ObjectID} = require('mongodb');\nconst {Todo} = require('./../../models/Todo');\nconst {User} = require('./../../models/User');\nconst jwt = require('jsonwebtoken');\n\nconst userIds = [new ObjectID(), new ObjectID(), new ObjectID(), new ObjectID(), new ObjectID(), new ObjectID()];\n\nconst users = [\n\t{ _id: userIds[0], email: 'gtsehn0@gmail.com', password: '123456' },\n\t{ _id: userIds[1], email: 'gtsehn1@gmail.com', password: '123456' },\n\t{ _id: userIds[2], email: 'a@a.c', password: '123456' },\n\t{ _id: userIds[3], email: 'gtsehn2@gmail.com', password: '12345' },\n\t{\n\t\t_id: userIds[4],\n\t\temail: 'auth1@aaa.com',\n\t\tpassword: '123456',\n\t\ttokens: [{\n\t\t\taccess: 'auth',\n\t\t\ttoken: jwt.sign({_id: userIds[4], access: 'auth'}, process.env.JWT_SECRET).toString()\n\t\t}]\n\t},\n\t{\t_id: userIds[5], email: 'jen@example.com', password: 'userPassowrd' }\n\n];\n\nconst populateUsers = (done) => {\n\tUser.remove({})\n\t.then(() => {\n\t\tconst user0 = new User(users[0]).save();\n\t\tconst user4 = new User(users[4]).save();\n\t\tconst user5 = new User(users[5]).save();\n\n\t\treturn Promise.all([user0, user4, user5]);\n\t})\n\t.then(() => done())\n\t.catch((err) => console.log(err));\n};\n\nconst todos = [\n\t{ _id: new ObjectID(), text: 'First test todo', _creator: userIds[4] },\n\t{ _id: new ObjectID(), text: 'Second test todo', completed: true, completedAt: 123123123, _creator: userIds[4] },\n];\n\nconst populateTodos = (done) => {\n\tTodo.remove({})\n\t.then(() => {\n\t\treturn Todo.insertMany(todos);\n\t})\n\t.then(() => done())\n\t.catch((err) => console.log(err));\n};\n\n\n\nmodule.exports = {\n\ttodos,\n\tpopulateTodos,\n\tusers,\n\tpopulateUsers\n};\n"]}