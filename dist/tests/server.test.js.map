{"version":3,"sources":["../../server/tests/server.test.js"],"names":["expect","require","request","_","ObjectID","app","Todo","todos","populateTodos","users","populateUsers","User","describe","beforeEach","it","done","text","post","set","tokens","token","send","res","body","todo","to","equal","end","err","find","then","length","catch","get","_id","toHexString","delete","findById","not","exist","substring","patch","completed","completedAt","be","a","user","email","headers","password","empty","pick","findOne","include","access"],"mappings":"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","file":"server.test.js","sourcesContent":["const {expect} = require('chai');\nconst request = require('supertest');\nconst _ = require('lodash');\nconst {ObjectID} = require('mongodb');\n\nconst {app} = require('./../app');\nconst {Todo} = require('./../models/Todo');\nconst {todos, populateTodos, users, populateUsers} = require('./seed/seed');\nconst {User} = require('./../models/User');\n\ndescribe('/todos', () => {\n\n\tbeforeEach(populateUsers);\n\tbeforeEach(populateTodos);\n\n\tdescribe('POST /todos', () => {\n\t\tit('should create a new Todo', (done) => {\n\t\t\tconst text = 'Test Todo text';\n\n\t\t\trequest(app)\n\t\t\t\t.post('/todos')\n\t\t\t\t.set('x-auth', users[4].tokens[0].token)\n\t\t\t\t.send({text})\n\t\t\t\t.expect(200)\n\t\t\t\t.expect((res) => {\n\t\t\t\t\texpect(res.body.todo.text).to.equal(text);\n\t\t\t\t})\n\t\t\t\t.end((err) => { // could have err, res\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn done(err);\n\t\t\t\t\t}\n\n\t\t\t\t\tTodo.find({ text })\n\t\t\t\t\t.then((todos) => {\n\t\t\t\t\t\texpect(todos.length).to.equal(1);\n\t\t\t\t\t\texpect(todos[0].text).to.equal(text);\n\t\t\t\t\t\tdone();\n\t\t\t\t\t})\n\t\t\t\t\t.catch((err) => done(err));\n\t\t\t\t});\n\t\t});\n\n\t\tit('should not create Todo with invalid body data', (done) => {\n\t\t\trequest(app)\n\t\t\t\t.post('/todos')\n\t\t\t\t.set('x-auth', users[4].tokens[0].token)\n\t\t\t\t.send({})\n\t\t\t\t.expect(400)\n\t\t\t\t.end((err) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn done(err);\n\t\t\t\t\t}\n\t\t\t\t\tTodo.find()\n\t\t\t\t\t.then((todos) => {\n\t\t\t\t\t\texpect(todos.length).to.equal(2);\n\t\t\t\t\t\tdone();\n\t\t\t\t\t})\n\t\t\t\t\t.catch((err) => {\n\t\t\t\t\t\tdone(err);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t});\n\t});\n\n\tdescribe(\"GET /todos\", () => {\n\t\tit('should get all todos', (done) => {\n\t\t\trequest(app)\n\t\t\t\t.get('/todos')\n\t\t\t\t.set('x-auth', users[4].tokens[0].token)\n\t\t\t\t.expect(200)\n\t\t\t\t.expect((res) => {\n\t\t\t\t\texpect(res.body.todos.length).to.equal(2);\n\t\t\t\t})\n\t\t\t\t.end(done);\n\t\t});\n\t});\n\n\tdescribe('GET /todos/:id', () => {\n\t\tit('should return a todo', (done) => {\n\t\t\trequest(app)\n\t\t\t\t.get(`/todos/${todos[0]._id.toHexString()}`)\n\t\t\t\t.set('x-auth', users[4].tokens[0].token)\n\t\t\t\t.expect(200)\n\t\t\t\t.expect((res) => {\n\t\t\t\t\t// console.log(res.body);\n\t\t\t\t\t// console.log(res.body.text);\n\t\t\t\t\texpect(res.body.todo.text).to.equal(todos[0].text);\n\t\t\t\t})\n\t\t\t\t.end(done);\n\t\t});\n\n\t\tit('should return 404 if todo is not found', (done) => {\n\t\t\trequest(app)\n\t\t\t\t.get(`/todos/${new ObjectID().toHexString()}`)\n\t\t\t\t.set('x-auth', users[4].tokens[0].token)\n\t\t\t\t.expect(404)\n\t\t\t\t.end(done);\n\t\t});\n\n\t\tit('should return 404 for non object ids', (done) => {\n\t\t\trequest(app)\n\t\t\t\t.get(`/todos/123`)\n\t\t\t\t.set('x-auth', users[4].tokens[0].token)\n\t\t\t\t.expect(404)\n\t\t\t\t.end(done);\n\t\t});\n\t});\n\n\tdescribe('DELETE /todos/:id', () => {\n\t\tit('should remove a todo', (done) => {\n\t\t\trequest(app)\n\t\t\t\t.delete(`/todos/${todos[1]._id.toHexString()}`)\n\t\t\t\t.set('x-auth', users[4].tokens[0].token)\n\t\t\t\t.expect(200)\n\t\t\t\t.expect((res) => {\n\t\t\t\t\texpect(res.body.todo._id).to.equal(todos[1]._id.toHexString());\n\t\t\t\t})\n\t\t\t\t.end((err) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn done(err);\n\t\t\t\t\t}\n\n\t\t\t\t\tTodo.findById(todos[1]._id.toHexString())\n\t\t\t\t\t.then((todo) => {\n\t\t\t\t\t\texpect(todo).to.not.exist;\n\t\t\t\t\t\tdone();\n\t\t\t\t\t})\n\t\t\t\t\t.catch((err) => {\n\t\t\t\t\t\tdone(err);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t});\n\n\t\tit('should return 404 if todo not found', (done) => {\n\t\t\trequest(app)\n\t\t\t\t.delete(`/todos/z${todos[1]._id.toHexString().substring(1)}`)\n\t\t\t\t.set('x-auth', users[4].tokens[0].token)\n\t\t\t\t.expect(404)\n\t\t\t\t.end(done);\n\t\t});\n\n\t\tit('should return 404 if object id is invalid', (done) => {\n\t\t\trequest(app)\n\t\t\t\t.delete(`/todos/zasdasd`)\n\t\t\t\t.set('x-auth', users[4].tokens[0].token)\n\t\t\t\t.expect(404)\n\t\t\t\t.end(done);\n\t\t});\n\t});\n\n\tdescribe('PATCH /todos/:id', () => {\n\t\tit('should update the todo', (done) => {\n\t\t\tconst text = 'new text[0]';\n\n\t\t\trequest(app)\n\t\t\t\t.patch(`/todos/${todos[0]._id.toHexString()}`)\n\t\t\t\t.set('x-auth', users[4].tokens[0].token)\n\t\t\t\t.send({ text, completed: true })\n\t\t\t\t.expect(200)\n\t\t\t\t.expect((res) => {\n\t\t\t\t\texpect(res.body.todo.text).to.equal(text);\n\t\t\t\t\texpect(res.body.todo.completed).to.equal(true);\n\t\t\t\t\texpect(res.body.todo.completedAt).to.be.a('number');\n\t\t\t\t})\n\t\t\t\t.end(done);\n\t\t});\n\n\t\tit('should clear completedAt when todo is not completed', (done) => {\n\t\t\tconst text = 'new text[1]';\n\n\t\t\trequest(app)\n\t\t\t\t.patch(`/todos/${todos[1]._id.toHexString()}`)\n\t\t\t\t.send({ text, completed: false })\n\t\t\t\t.set('x-auth', users[4].tokens[0].token)\n\t\t\t\t.expect(200)\n\t\t\t\t.expect((res) => {\n\t\t\t\t\texpect(res.body.todo.text).to.equal(text);\n\t\t\t\t\texpect(res.body.todo.completed).to.equal(false);\n\t\t\t\t\texpect(res.body.todo.completedAt).to.not.exist;\n\t\t\t\t})\n\t\t\t\t.end(done);\n\t\t});\n\n\t\tit('should return 404 for invalid id', (done) => {\n\t\t\trequest(app)\n\t\t\t\t.patch(`/todos/123123`, {})\n\t\t\t\t.set('x-auth', users[4].tokens[0].token)\n\t\t\t\t.expect(404)\n\t\t\t\t.end(done);\n\t\t});\n\t});\n});\n\ndescribe('/users', () => {\n\n\tbeforeEach(populateUsers);\n\n\tdescribe('POST /users', () => {\n\t\tit('should create a user properly', (done) => {\n\t\t\trequest(app)\n\t\t\t\t.post('/users')\n\t\t\t\t.send(users[1])\n\t\t\t\t.expect(200)\n\t\t\t\t.expect((res) => {\n\t\t\t\t\texpect(res.body.user.email).to.be.a('string');\n\t\t\t\t\texpect(res.body.user.email).to.equal(users[1].email);\n\t\t\t\t\texpect(res.headers['x-auth']).to.exist;\n\t\t\t\t})\n\t\t\t\t.end((err) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn done(err);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst {email, password} = users[1];\n\n\n\t\t\t\t\tUser.find({ email })\n\t\t\t\t\t.then((users) => {\n\t\t\t\t\t\texpect(users.length).to.equal(1);\n\t\t\t\t\t\texpect(users[0].email).to.equal(email);\n\t\t\t\t\t\texpect(users[0].password).to.not.equal(password);\n\t\t\t\t\t\tdone();\n\t\t\t\t\t})\n\t\t\t\t\t.catch((err) => done(err));\n\t\t\t\t});\n\n\n\t\t});\n\n\t\tit('should reject duplicate email', (done) => {\n\t\t\trequest(app)\n\t\t\t\t.post('/users')\n\t\t\t\t.send(users[0])\n\t\t\t\t.expect(400)\n\t\t\t\t.end(done);\n\t\t});\n\n\t\tit('should validate and reject an invalid email', (done) => {\n\t\t\trequest(app)\n\t\t\t\t.post('/users')\n\t\t\t\t.send(users[2])\n\t\t\t\t.expect(400)\n\t\t\t\t.end(done);\n\t\t});\n\n\t\tit('should validate and reject an invalid password', (done) => {\n\t\t\trequest(app)\n\t\t\t\t.post('/users')\n\t\t\t\t.send(users[3])\n\t\t\t\t.expect(400)\n\t\t\t\t.end(done);\n\t\t});\n\t});\n\n\tdescribe('GET /users/me', () => {\n\n\t\tit('should return user if authenticated', (done) => {\n\n\t\t\trequest(app)\n\t\t\t\t.get('/users/me')\n\t\t\t\t.set('x-auth', users[4].tokens[0].token)\n\t\t\t\t.expect(200)\n\t\t\t\t.expect((res) => {\n\t\t\t\t\texpect(res.body._id).to.equal(users[4]._id.toHexString());\n\t\t\t\t\texpect(res.body.email).to.equal(users[4].email);\n\t\t\t\t})\n\t\t\t\t.end(done);\n\t\t});\n\n\t\tit('should should return 401 if user is not authenticated', (done) => {\n\t\t\trequest(app)\n\t\t\t\t.get('/users/me')\n\t\t\t\t.expect(401)\n\t\t\t\t.expect((res) => {\n\t\t\t\t\texpect(res.body).to.be.empty;\n\t\t\t\t})\n\t\t\t\t.end(done);\n\t\t});\n\t});\n\n\tdescribe('DELETE /users/me/token', () => {\n\t\tit('should remove auth token on logout', (done) => {\n\t\t\trequest(app)\n\t\t\t\t.delete('/users/me/token')\n\t\t\t\t.set('x-auth', users[4].tokens[0].token)\n\t\t\t\t.expect(200)\n\t\t\t\t.end((err, res) => { // eslint-disable-line\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn done(err);\n\t\t\t\t\t}\n\n\t\t\t\t\tUser.findById(users[4]._id)\n\t\t\t\t\t.then((user) => {\n\t\t\t\t\t\texpect(user.tokens.length).to.equal(0);\n\t\t\t\t\t\tdone();\n\t\t\t\t\t})\n\t\t\t\t\t.catch((err) => {\n\t\t\t\t\t\tdone(err);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t});\n\t});\n\n\tdescribe('POST /users/login', () => {\n\n\t\tit('should login successfully', (done) => {\n\t\t\tconst user = _.pick(users[5], ['email', 'password']);\n\n\t\t\trequest(app)\n\t\t\t\t.post('/users/login')\n\t\t\t\t.send(user)\n\t\t\t\t.expect(200)\n\t\t\t\t.expect((res) => {\n\t\t\t\t\texpect(res.headers['x-auth']).to.exist;\n\t\t\t\t})\n\t\t\t\t.end((err, res) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn done(err);\n\t\t\t\t\t}\n\n\t\t\t\t\tUser.findOne({email: user.email})\n\t\t\t\t\t.then((user) => {\n\t\t\t\t\t\texpect(user.tokens[0]).to.include({\n\t\t\t\t\t\t\taccess: 'auth',\n\t\t\t\t\t\t\ttoken: res.headers['x-auth']\n\t\t\t\t\t\t});\n\t\t\t\t\t\tdone();\n\t\t\t\t\t})\n\t\t\t\t\t.catch((err) => {\n\t\t\t\t\t\tdone(err);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t});\n\n\t\tit('should reject wrong password', (done) => {\n\t\t\tconst user = _.pick(users[5], ['email', 'password']);\n\t\t\tuser.password += 'a';\n\n\t\t\trequest(app)\n\t\t\t\t.post('/users/login')\n\t\t\t\t.send(user)\n\t\t\t\t.expect(400)\n\t\t\t\t.end((err, res) => { // eslint-disable-line\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn done(err);\n\t\t\t\t\t}\n\n\t\t\t\t\tUser.findOne({email: user.email})\n\t\t\t\t\t.then((user) => {\n\t\t\t\t\t\texpect(user.tokens.length).to.equal(0);\n\t\t\t\t\t\tdone();\n\t\t\t\t\t})\n\t\t\t\t\t.catch((err) => {\n\t\t\t\t\t\tdone(err);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t});\n\n\t\tit('should reject user not found', (done) => {\n\t\t\trequest(app)\n\t\t\t\t.post('/users/login')\n\t\t\t\t.send({\n\t\t\t\t\temail: 'emailDoesntExist@examplenonexistent.com',\n\t\t\t\t\tpassword: '123123123'\n\t\t\t\t})\n\t\t\t\t.expect(400)\n\t\t\t\t.end(done);\n\t\t});\n\t});\n\n});\n"]}